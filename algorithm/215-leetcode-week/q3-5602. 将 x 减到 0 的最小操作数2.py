#!/usr/bin/env python
# -*- coding: utf-8 -*-
from collections import defaultdict
from typing import List

"""
给你一个整数数组 nums 和一个整数 x 。每一次操作时，你应当移除数组 nums 最左边或最右边的元素，然后从 x 中减去该元素的值
请注意，需要 修改 数组以供接下来的操作使用。

如果可以将 x 恰好 减到 0 ，返回 最小操作数 ；否则，返回 -1 。



来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/minimum-operations-to-reduce-x-to-zero
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
"""

"""
思路：使用前缀和+hash方式实现

"""


class Solution:
    def minOperations(self, nums: List[int], x: int) -> int:
        if sum(nums) < x: return -1  # 判断总和
        n = len(nums)
        ####计算左前缀和####
        left = 0
        ld = {}
        for i in range(len(nums)):
            left += nums[i]
            if left > x: break
            ld[left] = i + 1
        ####计算右前缀和####
        right = 0
        rd = {}
        for i in range(len(nums) - 1, -1, -1):
            right += nums[i]
            if right > x: break
            rd[right] = n - i
        ####比较只取左边和只取右边满足条件的步长####

        cur = min(ld.get(x, float('inf')), rd.get(x, float('inf')))
        ####再比较两边都取满足条件的步长####
        res = []
        for lsum in ld:
            if x - lsum in rd:
                lrc = rd[x - lsum] + ld[lsum]
                res.append(lrc)
        ####返回结果####

        return min(res) if res else -1


if __name__ == '__main__':
    nums = [2753, 778, 2454, 3049, 8148, 6899, 2088, 2526, 9979, 5771, 7687, 8419, 2551, 183, 7646, 8682, 3514, 7777,
            848, 4469, 5774, 8952, 9631, 4123, 1015, 258, 9195, 5763, 4802, 4819, 4889, 1345, 9357, 9422, 7958, 3801,
            1798, 3411, 3981, 4658, 3124, 1406, 8671, 6907, 4384, 1009, 5628, 4557, 4436, 9882, 3638, 6921, 4107, 3016,
            6969, 474, 4755, 8080, 2859, 568, 7929, 7496, 647, 5659, 4706, 3416, 4712, 9487, 892, 3338, 2983, 3754,
            3389, 5601, 8286, 3958, 7611, 4978, 5029, 9205, 9359, 1255, 2686, 1657, 980, 841, 6938, 9534, 6885, 6899,
            298, 5906, 8561, 2858, 1384, 7987, 7044, 6390, 1984, 2244, 2982, 4155, 3121, 6332, 4672, 5346, 1654, 2862,
            5947, 1181, 6207, 8546, 7376, 6393, 1873, 9584, 7373, 6265, 964, 2457, 4355, 8884, 4655, 4361, 5814, 2065,
            2280, 8608, 9077, 7931, 3256, 3749, 2359, 5248, 9358, 3541, 9808, 7796, 9208, 7416, 735, 4142, 9955, 2592,
            2163, 6383, 7545, 6832, 988, 1179, 5738, 8941, 8446, 1556, 1977, 9267, 1276, 905, 9349, 1936, 4837, 608,
            8771, 7047, 5150, 3732, 3743, 4555, 1927, 9249, 1908, 7834, 8828, 5859, 1133, 6816, 4688, 359, 6816, 3232,
            4264, 3335, 5691, 4051, 4857, 9467, 2382, 3613, 61, 1214, 4539, 4829, 3451, 3450, 7422, 6076, 5356, 659,
            3059, 9223, 5950, 9004, 7290, 3580, 10000, 725, 6730, 2327, 1055, 5342, 3856, 6218, 9008, 9184, 9290, 234,
            5918, 6305, 5383, 806, 4, 8479, 3612, 956, 8322, 2517, 9533, 8600, 8549, 9108, 6855, 7148, 3038, 8679, 5771,
            4107, 2568, 2931, 7027, 8841, 5318, 2524, 8628, 5086, 6885, 6460, 1296, 5634, 9107, 2681, 1029, 2777, 8767,
            3413, 1821, 119, 5682, 9330, 948, 9374, 4219, 6159, 9464, 7880, 7608, 2492, 8889, 28, 6031, 4111, 8630,
            7197, 296, 2419, 7920, 1381]
    s = Solution()
    print(s.minOperations(nums, 1140836))
